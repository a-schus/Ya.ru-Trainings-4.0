/*
E. Средний уровень
Ограничение времени	1 секунда
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

В группе учатся n студентов, каждый из которых имеет свой рейтинг ai. 
Им нужно выбрать старосту; для этого студенты хотят выбрать старосту таким образом 
чтобы суммарный уровень недовольства группы был минимальный. Если выбрать j-го старостой, 
то уровень недовольства i-го студента равен ∣ai−aj∣.
Например, если в группе есть три студента с рейтингами 1, 3 и 4 и в качестве старосты выбирают второго, 
то уровень недовольства группы будет равен |1−3|+|3−3|+|4−3|=3.
Вычислите уровень недовольства группы при выборе каждого из студентов старостой.

Формат ввода
В первой строке дано единственное целое число n(1≤n≤10^5)  — количество студентов в группе.
Во второй строке даны n целых чисел a1, a2, … , an, идущих по неубыванию 
(0 ≤ a1 ≤ a2 ≤ … ≤ an ≤ 10^4) — рейтинги студентов.

Формат вывода
Выведите n чисел через пробел, i-е из которых будет обозначать уровень недовольства группы при выборе 
i-го студента старостой.
*/


#include <iostream>
#include <vector>

int main()
{
	int n;
	std::cin >> n;
	std::vector<int> v(n), sumNth(n);
	std::cin >> v[0];
	sumNth[0] = v[0];

	for (int i = 1; i < n; ++i) {
		std::cin >> v[i];
		sumNth[i] = v[i] + sumNth[i - 1];
	}

	long long sum = sumNth[sumNth.size() - 1];

	std::vector<int> res(n);
	res[0] = sum - v[0] - v[0] * (n - 1);
	std::cout << res[0] << ' ';


	for (int i = 1; i < n; ++i) {
		int sumR = sum - sumNth[i];
		res[i] = (sumR - v[i] * (n - i - 1)) + (v[i] * (i)-sumNth[i - 1]);

		std::cout << res[i] << ' ';
	}

	std::cout << '\n';

	return 0;
}
