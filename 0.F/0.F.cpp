/*
F. Лифт
Ограничение времени	1 секунда
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Тридцатого декабря все сотрудники известной IT-компании отправляются праздновать Новый год! 
На парковке офиса сотрудников уже ожидают автобусы, чтобы отвезти их в ресторан. Известно, 
что на i-м этаже работает ai сотрудников, а парковка расположена на нулевом этаже. Изначально лифт 
расположен на этаже с парковкой. Какое минимальное количество времени лифт будет перевозить всех людей 
на парковку? Известно, что лифт движется со скоростью один этаж в секунду, а посадка и высадка происходит мгновенно.

Формат ввода
В первой строке дано единственное целое число k(1 ≤ k ≤ 10^9) — количество людей, которое вмещает лифт 
за одну поездку. Во второй строке дано единственное целое число n — количество этажей в здании. В следующих 
n(1 ≤ n ≤ 10^5) строках дано по одному целому неотрицательному числу ai(0 ≤ ai ≤ 10^9), которое обозначает 
количество сотрудников на этаже номер i.

Формат вывода
Выведите единственное целое число  — минимальное количество секунд, которое необходимо, чтобы все сотрудники оказались на парковке.
*/


#include <iostream>
#include <vector>
#include <cmath>

int main()
{
	long long k;
	std::cin >> k;

	long long n;
	std::cin >> n;

	std::vector<long long> a(n);
	for (long long i = 0; i < n; ++i) {
		std::cin >> a[i];
	}

	unsigned long long res = 0;

	for (long long i = n - 1; i > 0; --i) {
		if (a[i] != 0) {
			if (a[i] < 0) {
				a[i - 1] += a[i];
				a[i] = 0;
			}
			else {
				long long shortfall = k - (a[i] % k);
				if (shortfall < k) {
					a[i] += shortfall;
					a[i - 1] -= shortfall;
				}
				res += a[i] / k * (i + 1) * 2;
			}
		}
	}
	if (a[0] <= 0) {
		//a[0] = 0;
	}
	else if (a[0] < k) {
		res += 2;
	}
	else {
		res += a[0] / k * 2;
		if (a[0] % k) res += 2;
	}

	std::cout << res << '\n';
}
